{"version":3,"file":"static/js/245.f63720f0.chunk.js","mappings":"+NACA,EAAsG,mBAAtG,EAAoI,uBAApI,EAAoK,qB,SCArJ,SAASA,EAAT,GAAiE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,kBAAmBC,EAAY,EAAZA,SACjE,OACE,iCACE,kBACEC,KAAK,WACLC,UAAWC,EACXC,QAASN,EACTO,SAAUN,KAEZ,cAAGG,UAAWC,EAAd,SAA4BN,KAC5B,mBAAQI,KAAK,SAASC,UAAWC,EAAeG,QAASN,EAAzD,2D,aCVN,GAAgB,KAAO,wBCIR,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,iBAK1B,OACE,eAAIV,UAAWC,EAAAA,KAAf,SACGO,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAajB,EAApB,EAAoBA,UAApB,OACT,eAAaI,UAAWJ,EAAYK,EAAAA,UAAmBA,EAAAA,KAAvD,UACE,SAACP,EAAD,CACEC,KAAMkB,EACNjB,UAAWA,EACXC,kBAAmB,kBATH,SAAAe,GAAE,OAAIN,EAASQ,EAAAA,GAAAA,gBAAgCF,IAU7Df,CAAkB,CAAEe,GAAAA,EAAIhB,WAAYA,KAEtCE,SAAU,kBAbC,SAAAc,GAAE,OAAIN,EAASQ,EAAAA,GAAAA,WAA2BF,IAarCG,CAAaH,OAPxBA,Q,cCdjB,EAAyB,2BAAzB,EAA+D,6BAA/D,EAAqG,2BC2BrG,EAxBmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdV,GAAWC,EAAAA,EAAAA,MAajB,OACE,kBAAMP,UAAWC,EAAegB,SAZb,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAUF,EAAEG,cAAcC,SAASF,QAAQG,MACjD,GAAgB,KAAZH,EAGF,OAFAd,EAASQ,EAAAA,EAAAA,QAAwBM,SACjCJ,IAGFQ,MAAM,0HAIN,WACE,qBAAUC,KAAK,UAAUzB,UAAWC,KACpC,mBAAQF,KAAK,SAASC,UAAWC,EAAjC,wECpBN,EAAyB,2BAAzB,EAA4D,0BAA5D,EAA8F,0BCG/E,SAASyB,IACtB,IAAMpB,GAAWC,EAAAA,EAAAA,MACXgB,GAAQd,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAE1B,OACE,iBAAKV,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,mIACA,kBACEF,KAAK,OACLC,UAAWC,EACXsB,MAAOA,EACPpB,SAAU,SAAAe,GAAC,OAAIZ,GAASqB,EAAAA,EAAAA,IAAaT,EAAEU,OAAOL,cCdtD,MAA4B,yBAA5B,EAA4D,oBAA5D,EAAwF,qBAAxF,EAAqH,qBCGtG,SAASM,IACtB,IAAMC,GAAQrB,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,mBACpBd,GAAYa,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,uBAE9B,OACE,iBAAKV,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,WACE,iBAAMD,UAAWC,EAAjB,SAAgC6B,KAChC,iBAAM9B,UAAWC,EAAjB,gDAEF,eAAGD,UAAWC,EAAd,WACE,iBAAMD,UAAWC,EAAjB,SAAgCL,KAChC,iBAAMI,UAAWC,EAAjB,0E,cCfR,EAA2B,wBAA3B,EAA6D,uBCGvD8B,EAAYC,SAASC,cAAc,eA6BzC,EA3Bc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACxBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAnB,GACL,WAAXA,EAAEoB,MAAmBJ,KAK3B,OAFAK,OAAOC,iBAAiB,UAAWH,GAE5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAEvC,CAACH,IAQJ,OAAOQ,EAAAA,EAAAA,eACL,gBAAK1C,UAAWC,EAAiBG,QAPP,SAAAuC,GACtBA,EAAMtB,gBAAkBsB,EAAMf,QAChCM,KAKF,UACE,gBAAKlC,UAAWC,EAAhB,SAAiCkC,MAEnCJ,I,oBC5BJ,EAAyB,2B,yBCEV,SAASa,EAAT,GAIX,IAAD,IAHDT,SAAAA,OAGC,MAHU,KAGV,MAFD/B,QAAAA,OAEC,MAFS,kBAAM,MAEf,EADEyC,GACF,YACD,OACE,mCACE9C,KAAK,SACLC,UAAWC,EACXG,QAASA,GACLyC,GAJN,aAMGV,KCJP,IAAMW,EAAY,CAChBC,QAAS,OACTC,WAAY,WACZC,aAAc,IAGD,SAASC,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MACX4C,GAAiB1C,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,YACnC,GAAsC0C,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAc,kBAAMD,GAAe,SAAAE,GAAK,OAAKA,MAMnD,OAJApB,EAAAA,EAAAA,YAAU,WACR9B,EAASQ,EAAAA,GAAAA,gBACR,CAACR,KAGF,iCACE,iBAAKmD,MAAOX,EAAZ,WACE,SAAC,EAAD,KACA,SAACjB,EAAD,KACA,SAACe,EAAD,CAAYxC,QAASmD,EAAa,aAAW,wDAA7C,UACE,SAAC,MAAD,CAAQG,KAAM,GAAIC,MAAM,WAGzBR,IAAkB,0FAGrB,SAAC9C,EAAD,IAECgD,IACC,SAAC,EAAD,CAAOnB,QAASqB,EAAhB,UACE,SAAC,EAAD,CAAYvC,OAAQuC","sources":["webpack://react-homework-template/./src/components/Todo/Todo.module.css?5e9d","components/Todo/Todo.js","webpack://react-homework-template/./src/components/TodoList/TodoList.module.css?c2f9","components/TodoList/TodoList.js","webpack://react-homework-template/./src/components/TodoEditor/TodoEditor.module.css?eca2","components/TodoEditor/TodoEditor.js","webpack://react-homework-template/./src/components/TodoFilter/TodoFilter.module.css?f474","components/TodoFilter/TodoFilter.js","webpack://react-homework-template/./src/components/Stats/Stats.module.css?9ca2","components/Stats/Stats.js","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.js","webpack://react-homework-template/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Todo_item__raM+b\",\"completed\":\"Todo_completed__fUcj8 Todo_item__raM+b\",\"text\":\"Todo_text__T4iRg\",\"checkbox\":\"Todo_checkbox__GVglj\",\"button\":\"Todo_button__yKt9p\"};","import styles from './Todo.module.css';\nexport default function Todo({ text, completed, onToggleCompleted, onDelete }) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={completed}\n        onChange={onToggleCompleted}\n      />\n      <p className={styles.text}>{text}</p>\n      <button type=\"button\" className={styles.button} onClick={onDelete}>\n        Удалить\n      </button>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TodoList_list__dqQoz\"};","import Todo from '../Todo';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { todosOperations, todosSelectors } from '../../redux/contacts';\nimport styles from './TodoList.module.css';\n\nexport default function TodoList() {\n  const dispatch = useDispatch();\n  const todos = useSelector(todosSelectors.getVisibleTodos);\n\n  const onDeleteTodo = id => dispatch(todosOperations.deleteTodo(id));\n  const onToggleCompleted = id => dispatch(todosOperations.toggleCompleted(id));\n\n  return (\n    <ul className={styles.list}>\n      {todos.map(({ id, description, completed }) => (\n        <li key={id} className={completed ? styles.completed : styles.item}>\n          <Todo\n            text={description}\n            completed={completed}\n            onToggleCompleted={() =>\n              onToggleCompleted({ id, completed: !completed })\n            }\n            onDelete={() => onDeleteTodo(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"editor\":\"TodoEditor_editor__rUZob\",\"textarea\":\"TodoEditor_textarea__xteDv\",\"button\":\"TodoEditor_button__nJxYx\"};","import { useDispatch } from 'react-redux';\nimport todosOperations from '../../redux/contacts/todos-operations';\nimport styles from './TodoEditor.module.css';\n\nconst TodoEditor = ({ onSave }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const message = e.currentTarget.elements.message.value;\n    if (message !== '') {\n      dispatch(todosOperations.addTodo(message));\n      onSave();\n      return;\n    }\n    alert('Заполни текст заметки.');\n  };\n\n  return (\n    <form className={styles.editor} onSubmit={handleSubmit}>\n      <textarea name=\"message\" className={styles.textarea} />\n      <button type=\"submit\" className={styles.button}>\n        Сохранить\n      </button>\n    </form>\n  );\n};\n\nexport default TodoEditor;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"TodoFilter_filter__RkCo-\",\"label\":\"TodoFilter_label__WbeUn\",\"input\":\"TodoFilter_input__DM6h5\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { todosSelectors, changeFilter } from '../../redux/contacts';\nimport styles from './TodoFilter.module.css';\n\nexport default function TodoFilter() {\n  const dispatch = useDispatch();\n  const value = useSelector(todosSelectors.getFilter);\n\n  return (\n    <div className={styles.filter}>\n      <p className={styles.label}>Фильтр по содержимому</p>\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Stats_container__1w+Jh\",\"item\":\"Stats_item__hLiH+\",\"value\":\"Stats_value__dd7Ip\",\"label\":\"Stats_label__41Sut\"};","import { useSelector } from 'react-redux';\nimport styles from './Stats.module.css';\nimport { todosSelectors } from '../../redux/contacts';\n\nexport default function Stats() {\n  const total = useSelector(todosSelectors.getTotalTodoCount);\n  const completed = useSelector(todosSelectors.getCompletedTodoCount);\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.item}>\n        <span className={styles.value}>{total}</span>\n        <span className={styles.label}>Всего</span>\n      </p>\n      <p className={styles.item}>\n        <span className={styles.value}>{completed}</span>\n        <span className={styles.label}>Выполнено</span>\n      </p>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"content\":\"Modal_content__gGb69\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.backdrop} onClick={handleBackdropClick}>\n      <div className={styles.content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"IconButton_button__AP7kz\"};","import PropTypes from 'prop-types';\nimport styles from './IconButton.module.css';\n\nexport default function IconButton({\n  children = null,\n  onClick = () => null,\n  ...otherProps\n}) {\n  return (\n    <button\n      type=\"button\"\n      className={styles.button}\n      onClick={onClick}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HiPlus } from 'react-icons/hi';\nimport TodoList from '../../components/TodoList';\nimport TodoEditor from '../../components/TodoEditor';\nimport Filter from '../../components/TodoFilter';\nimport Stats from '../../components/Stats';\nimport Modal from '../../components/Modal';\nimport IconButton from '../../components/IconButton';\nimport { todosOperations, todosSelectors } from '../../redux/contacts';\n\nconst barStyles = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  marginBottom: 20,\n};\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoadingTodos = useSelector(todosSelectors.getLoading);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  useEffect(() => {\n    dispatch(todosOperations.fetchTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={barStyles}>\n        <Filter />\n        <Stats />\n        <IconButton onClick={toggleModal} aria-label=\"Добавить todo\">\n          <HiPlus size={24} color=\"#fff\" />\n        </IconButton>\n\n        {isLoadingTodos && <h1>Загружаем...</h1>}\n      </div>\n\n      <TodoList />\n\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <TodoEditor onSave={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["Todo","text","completed","onToggleCompleted","onDelete","type","className","styles","checked","onChange","onClick","TodoList","dispatch","useDispatch","todos","useSelector","todosSelectors","map","id","description","todosOperations","onDeleteTodo","onSave","onSubmit","e","preventDefault","message","currentTarget","elements","value","alert","name","TodoFilter","changeFilter","target","Stats","total","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","event","IconButton","otherProps","barStyles","display","alignItems","marginBottom","ContactsPage","isLoadingTodos","useState","isModalOpen","setIsModalOpen","toggleModal","state","style","size","color"],"sourceRoot":""}