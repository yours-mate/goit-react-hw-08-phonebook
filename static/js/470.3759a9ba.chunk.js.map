{"version":3,"file":"static/js/470.3759a9ba.chunk.js","mappings":"sNAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,QAC3BC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,WCDpD,EAAuB,0BAAvB,EAA+D,iCAA/D,EAA4G,+B,SCKrG,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYZ,GAgBpC,OACE,0BACE,kBAAMa,UAAWC,EAAUC,SAhBN,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,MAEpC,GADcX,EAAgBa,KAAI,SAAAC,GAAO,OAAIA,EAAQL,KAAKM,iBAChDC,SAASP,EAAKM,eACtB,OAAOE,MAAM,cAAD,OACIR,EAAKS,cADT,iCAIdpB,GAASqB,EAAAA,EAAAA,IAAW,CAAEV,KAAAA,EAAMG,OAAAA,KAC5BL,EAAKa,SAIoDC,GAAG,OAA1D,WACE,mBAAOnB,UAAWC,EAAlB,kBAEE,kBACEmB,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOvB,UAAWC,EAAlB,oBAEE,kBACEmB,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQvB,UAAWC,EAAemB,KAAK,SAAvC,8B,cC/CR,EAAgC,8BCGzB,SAASI,IACd,IAAM5B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,0BACE,mBAAOG,UAAWC,EAAlB,mCAEE,kBAAOwB,SARc,SAAAC,GACzB9B,GAAS+B,EAAAA,EAAAA,GAAaD,EAAIE,OAAOnB,gBCPrC,MAA0B,iCAA1B,EAA0E,sCCInE,SAASoB,EAAT,GAAuC,IAAZjB,EAAW,EAAXA,QAC1BhB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAIG,UAAWC,EAAf,UACGW,EAAQL,KADX,KACmBK,EAAQF,QACzB,mBACEV,UAAWC,EACXM,KAAMK,EAAQO,GACdC,KAAK,SACLU,QAXkB,SAAAJ,GACtB9B,GAASmC,EAAAA,EAAAA,IAAcL,EAAIE,OAAOrB,QAMhC,uBCVC,SAASyB,IACd,IAAMlC,GAAkBC,EAAAA,EAAAA,IAAYZ,GAC9B8C,GAAgBlC,EAAAA,EAAAA,IAAYR,GAE5B2C,GAAmBC,EAAAA,EAAAA,UAAQ,WAE/B,OADAC,QAAQC,IAAIvC,GACLA,EAAgBN,QAAO,SAAAoB,GAAO,OACnCA,EAAQL,KAAKM,cAAcC,SAASmB,EAAcpB,oBAEnD,CAACf,EAAiBmC,IAErB,OACE,0BACE,wBACGC,EAAiBvB,KAAI,SAAAC,GAAO,OAC3B,SAACiB,EAAD,CAAiBjB,QAASA,GAAcA,EAAQO,WCZ3C,SAASmB,IACtB,IAAM1C,GAAWC,EAAAA,EAAAA,MACX0C,GAAoBxC,EAAAA,EAAAA,IAAYN,GAMtC,OAJA+C,EAAAA,EAAAA,YAAU,WACR5C,GAAS6C,EAAAA,EAAAA,SACR,CAAC7C,KAGF,4BACE,SAACD,EAAD,KACA,SAAC6B,EAAD,IACCe,IAAqB,wCACtB,SAACP,EAAD","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","import { addContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport css from '../ContactForm/ContactForm.module.css';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const currentContacts = useSelector(getContacts);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const names = currentContacts.map(contact => contact.name.toLowerCase());\n    if (names.includes(name.toLowerCase())) {\n      return alert(\n        `Subscriber ${name.toUpperCase()} is already in the phonebook`\n      );\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleFormSubmit} id=\"form\">\n        <label className={css.form__label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.form__label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button className={css.form__btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"search__label\":\"Filter_search__label__SuJYK\"};","import { useDispatch } from 'react-redux';\nimport { handleFilter } from 'redux/filter/filterSlice';\nimport css from '../Filter/Filter.module.css';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = evt => {\n    dispatch(handleFilter(evt.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.search__label}>\n        Find contacts by name\n        <input onChange={handleFilterChange}></input>\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactListItem_contact__gtH4X\",\"contact__btn\":\"ContactListItem_contact__btn__D0pkC\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from '../ContactListItem/ContactListItem.module.css';\n\nexport function ContactListItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const handleDeleteBtn = evt => {\n    dispatch(deleteContact(evt.target.name));\n  };\n\n  return (\n    <li className={css.contact}>\n      {contact.name}: {contact.number}\n      <button\n        className={css.contact__btn}\n        name={contact.id}\n        type=\"button\"\n        onClick={handleDeleteBtn}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { getContacts, getFilter } from 'redux/contacts/contacts-selectors';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nexport function ContactsList() {\n  const currentContacts = useSelector(getContacts);\n  const currentFilter = useSelector(getFilter);\n\n  const searchedContacts = useMemo(() => {\n    console.log(currentContacts);\n    return currentContacts.filter(contact =>\n      contact.name.toLowerCase().includes(currentFilter.toLowerCase())\n    );\n  }, [currentContacts, currentFilter]);\n\n  return (\n    <div>\n      <ul>\n        {searchedContacts.map(contact => (\n          <ContactListItem contact={contact} key={contact.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {isLoadingContacts && <h1>Loading...</h1>}\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","ContactForm","dispatch","useDispatch","currentContacts","useSelector","className","css","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","map","contact","toLowerCase","includes","alert","toUpperCase","addContact","reset","id","type","pattern","title","required","Filter","onChange","evt","handleFilter","target","ContactListItem","onClick","deleteContact","ContactsList","currentFilter","searchedContacts","useMemo","console","log","ContactsPage","isLoadingContacts","useEffect","fetchContacts"],"sourceRoot":""}